game.h
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#define ROW 9
#define COL 9
#define ROWS  ROW + 2
#define COLS  COL + 2
#define COUNT 10
void InitBoard(char board[ROWS][COLS], int rows, int cols,char set);
void DisplayBoard(char board[ROWS][COLS], int row, int col);
void SetMine(char board[ROWS][COLS], int row, int col);
void FindMine(char mine[ROWS][COLS], char show[ROWS][COLS], int row, int col);

game.c
#define _CRT_SECURE_NO_WARNINGS 1
#include "game.h"
void InitBoard(char board[ROWS][COLS], int rows, int cols,char set)
{
        int i = 0;
        int j = 0;
        for (i = 0; i < rows; i++)
        {
               for (j = 0; j < cols; j++)
               {
                       board[i][j] = set;
               }
        }
}
void DisplayBoard(char board[ROWS][COLS], int row, int col)
{
        int i = 0;
        int j = 0;
        //打印列号
        for ( i = 0; i <= col; i++)
        {
               printf("%d ", i);
        }
        printf("\n");
        for ( i = 1; i <= row; i++)
        {
               //打印列号
               printf("%d ", i);
               for (j = 1; j <= col; j++)
               {
                       printf("%c ",board[i][j]);
               }
               printf("\n");
        }
}
void SetMine(char board[ROWS][COLS], int row, int col)
{
        int count = COUNT;
        while (count!=0)
        {
               int x = rand() % (row + 1);//产生1-9的随机数
               int y = rand() % (col + 1);
               if (board[x][y]=='0')
               {
                       board[x][y] = '1';
                       count--;
               }
        }
}
int getmine_count(char mine[ROWS][COLS], int x, int y)
{
        return mine[x - 1][y] +
               mine[x - 1][y - 1] +
               mine[x][y - 1] +
               mine[x + 1][y - 1] +
               mine[x + 1][y] +
               mine[x + 1][y + 1] +
               mine[x][y + 1] +
               mine[x - 1][y + 1] - 8 * '0';
}
void FindMine(char mine[ROWS][COLS], char show[ROWS][COLS], int row, int col)
{
        int x = 0;
        int y = 0;
        int win = 0;
        //9*9-10=71
        while (win<row*col-COUNT)
        {
               printf("请输入你要排查的位置：\n");
               scanf("%d%d", &x, &y);
               //判断输入是否合法
               if (x >= 1 && x <= row && y >= 0 && y <= col)               
               {
                       //判断排查地点是否有雷
                       if (mine[x][y] == '1')
                       {
                              printf("踩到地雷，游戏结束！\n");
                              DisplayBoard(mine, row, col);
                              break;
                       }
                       else
                       {
                              //判断周围雷的个数
                              int count = getmine_count(mine, x, y);
                              show[x][y] = count + '0';
                              DisplayBoard(show, row, col);
                       }
                       
                       
               }
               else
               {
                       printf("输入错误，请重新输入：\n");
               }
        }
        if (win == row * col - COUNT)
        {
               printf("恭喜你，排雷成功！");
        }
}


text.c
#define _CRT_SECURE_NO_WARNINGS 1
#include"game.h"
void menu()
{
        printf("/*******   扫雷游戏   *******/\n");
        printf("1.开始游戏     2.退出游戏\n");
        printf("请选择：\n");
        
}
void game()
{
        //1.布置好雷的信息
        char mine[ROWS][COLS] = {0};
        //2.排查出雷的信息
        char show[ROWS][COLS] = { 0 };
        //初始化
        InitBoard(mine, ROWS, COLS, '0');
        InitBoard(show, ROWS, COLS, '*');
        //打印棋盘
        //DisplayBoard(mine, ROW, COL);
        DisplayBoard(show, ROW, COL);
        //布置雷
        SetMine(mine, ROW, COL);
        //DisplayBoard(mine, ROW, COL);
        //扫雷
        FindMine(mine, show, ROW, COL);
}
void text()
{
        srand((unsigned)time(NULL));
        int input = 0;
        do
        {
               menu();
               scanf("%d", &input);
               switch (input)
               {
               case 1:
                       game();
                       break;
               case 2:
                       printf("退出游戏\n");
                       break;
               default:
                       printf("输入有误，请重新输入：\n");
                       break;
               }
        } while (input != 2);
}
int main()
{
        text();
        return 0;
}
