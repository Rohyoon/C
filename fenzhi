#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>

////输出一到一百的奇数
//
//
//int main()
//{
//	int day = 0;
//	scanf("%d", &day);
//	switch(day)
//	{
//	case 1:
//		printf("今天是星期一\n");
//	case 2:
//		printf("今天是星期二\n");
//	case 3:
//		printf("今天是星期三\n");
//	case 4:
//		printf("今天是星期四\n");
//	case 5:
//		printf("今天是星期五\n");
//	}
//	return 0;
//}
//
//int main()
//{
//	int day = 0;
//	int n = 0;
//	scanf("%d", &day);
//	switch (day)
//	{
//	case 1:
//	case 2:
//	case 3:
//		if (n == 0)
//			printf("你好！\n");
//		break;
//	case 4:
//	case 5:
//		printf("工作日\n");
//		break;
//	case  6:
//	case 7:
//		printf("休息日\n");
//		break;
//	default:
//		printf("输入错误，请重新输入\n");
//		break;
//	}
//	return 0;
//}
//int main()
//{
//	int n = 1;
//	int m = 2;
//	switch (n)
//	{
//	case 1:
//		m++;
//	case 2:
//		n++;
//	case 3:
//		switch (n)
//		{
//		case 1:
//			n++;
//		case 2:
//			m++;
//			n++;
//			break;
//		}
//	case 4:
//		m++;
//		break;
//	default:
//		break;
//	}
//	printf("m=%d ,n=%d\n", m, n);
//	return 0;
//}

//循环

//int main()
//{
//	int i = 1;
//	while (i<=10)
//	{
//		if (i == 5)
//			continue;          //终止本次循环中continue后面的代码，直接返回循环
//		printf("%d ", i);
//		i++;
//	}
//	return 0;
//}

//int main()
//{
//	int ch = 0;
//	while ((ch=getchar()) != EOF)         //getchar返回的是int型,  EOF-->end of file（本质是-1） ,文件结束标志，输入ctrl+z表示EOF。
//	{
//		putchar(ch);
//	}
//	return 0;
//}

//int main()
//{
//	int ret = 0;
//	int ch = 0;
//	char password[20] = { 0 };
//	printf("请输入密码：");
//	scanf("%s", password);   //不用取地址符&是因为数组本身表示地址。
//	while ((ch=getchar()) != '\n')      //定义一个ch，将‘\n’从缓存区取出
//	{
//		;
//	}
//	printf("是否确认（Y/N）：");
//	ret = getchar();
//	if (ret == 'Y')
//	{
//		printf("确认成功！\n");
//	}
//	else
//	{
//		printf("确认失败！\n");
//	}
//	return 0;
//}


//int main()          //只输出0到9的字符
//{
//	int ch = 0;
//	while ((ch=getchar())!=EOF)
//	{
//		if (ch < '0' || ch>'9')
//		{
//			continue;
//		}
//		putchar(ch);
//	}
//	return 0;
//
//}


//for循环的变种
//int main()
//{
//	for (;;)                                   //for循环的三个条件都可以省略，若省略判断部分则代表恒为真
//	{
//		printf("呵呵！\n");
//	}
//	return 0;
//}

//int main()                 //省略条件的影响：本该打印一百次hehe，但只打印了十次，原因是内循环j循环完一次后j=10；由于j没有定义j=0，导致进入不了内循环
//{
//	int i = 0, j = 0;
//	for (; i < 10; i++)
//	{
//		for (; j < 10;j++)
//		{
//			printf("hehe\n");
//		}
//	}
//	return 0;
//}


//分支循环代码练习
//1.计算n的阶乘

//int main()
//{
//	int n = 0;
//	int sum = 1;
//	int i = 0;
//	scanf("%d", &n);
//	for (i = 1; i <= n; i++)
//	{
//		sum=sum*i;
//	}
//	printf("%d\n", sum);
//	return 0;
//}

//利用递归调用实现n的阶乘
//int func(int a)		//定义计算n的阶乘的函数，使用递归调用实现
//{
//	int sum;
//	if (a == 0 || a == 1)
//		sum = 1;
//	else if (a < 0)
//		printf("输入错误\n");
//	else
//		sum = a * func(a - 1);
//	return sum;
//}
//
//int main()
//{
//	int n = 0;
//	int i = 0;
//	int sum;
//	scanf("%d", &n);
//	sum = func(n);
//	printf("%d\n", sum);
//	return 0;
//}


//2.计算1！+2！+3！+……n！
//int main()
//{
//	int n = 0;
//	int i = 0;
//	int j = 0;
//	int sum = 1;
//	int ret = 0;
//	scanf("%d", &n);
//	for (i = 1; i <= n; i++)
//	{
//		sum = 1;
//		for (j = 1; j <= i; j++)
//		{
//			sum *= j;
//		}
//		ret += sum;
//	}
//	printf("%d\n", ret);
//	return 0;
//}

//3.在一个有序数组中查找具体的某个数字n。编写int binsearch(int x,int v[],int n);功能：在v[0]<=v[1]...<=v[n-1]的数组查找x。

//int binsearch(int x, int v[], int n)
//{
//	for (n = 0; n < 10; n++)
//	{
//		if (v[n] == x)
//		{
//			return n;
//			break;
//		}
//	}
//	if (n == 10)
//		printf("数组中没有查找的数\n");
//	return 11;
//}
//int main()
//{
//	int n;
//	int x;
//	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
//	scanf("%d", &n);
//	x = binsearch(n, arr,10);
//	if (x == 11)
//		printf(" ");
//	else
//
//		printf("查找的数的下标是%d\n", x);
//	return 0;
//}

//使用二分法查找元素
//int main()
//{
//	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
//	int n;
//	int left = 0;		//令left指向最左端，right指向最右端
//	int mid = 0;
//	int sz;		
//	int right;
//	sz = sizeof(arr) / sizeof(arr[0]);		//计算元素个数的一种方式,用所有元素的位长度/一个元素的位长度。
//	right = sz - 1;
//	scanf("%d", &n);
//	if (n<arr[0] || n>arr[9])		//当所查找的数不在数列中时
//	{
//		printf("无需要查找的数\n");
//	}
//	else		//当查找的数在数列中时
//	{
//		while (arr[mid] != n)		//判断查找数与mid数的大小
//		{
//			mid = (left + right) / 2;
//			if (n < arr[mid])
//			{
//				right = mid;
//			}
//			else
//			{
//				left = mid;
//			}
//			
//		}
//		printf("找到了，数组下标为%d\n", mid);
// break;
//	}
//	return 0;
//}

//编写代码，实现多个字符从两端移动，向中间汇聚

#include<string.h>
#include<windows.h>
#include<windows.system.h>
int main()
{
	char arr1[] = "welcome to china!!!!";
	char arr2[] = "####################";
	int left = 0;
	int right = strlen(arr1) - 1;		//strlen（）计算个数（不算‘/0’）
	while (left <= right)
	{
		arr2[left] = arr1[left];
		arr2[right] = arr1[right];
		printf("%s\n", arr2);
		Sleep(1000);		//休眠1000ms
		system("cls");		//清空
		left++;
		right--;
	}
	printf("%s\n", arr2);
	return 0;
}
//最大公约数的查找方法
//int main()
//{
//	int m = 0;
//	int n = 0;
//	int r = 0;		
//	int temp = 0;
//	scanf("%d%d", &m, &n);
//	if (m < n)		//将大数放在m中，小数放在n中。
//	{
//		temp = m;
//		m = n;
//		n = temp;
//	}
//	while (m % n != 0)		//求公约数的操作：若m%n不为0，则令m=n,n=r,继续循环操作。
//	{
//		r = m % n;
//		m = n;
//		n = r;
//	}
//	printf("最大公约数为%d\n", n);
//	return 0;
//}


//素数的求法
#include<math.h>
//int main()		//求100-200之间的所有素数，并输出个数
//{
//	int i = 0;
//	int count = 0;
//	int j = 0;
//	for (i = 100; i <= 200; i++)
//	{
//		for (j = 2; j <= sqrt(i); j++)		//试除法，当j<=开平方i时，就表示是素数。
//		{
//			if (i % j == 0)
//			{
//				break;
//			}
//		}
//		if (j>sqrt(i))
//		{
//			count++;
//			printf("%d ", i);
//		}
//	}
//	printf("\ncount=%d\n", count);
//	return 0;
//}


//计算1/1-1/2+1/3...-1/100。
//int main()
//{
//	int i = 0;
//	int j = 2;
//	double sum1 = 0.0;
//	double sum2 = 0.0;
//	double sum3 = 0.0;
//	for (i = 1; i <= 100; i += 2)
//	{
//		sum1 += 1.0 / i;
//	}
//	for (j = 2; j <= 100; j += 2)
//	{
//		sum2 += (-1.0) / j;
//	}
//	sum3 = sum1 + sum2;
//	printf("%lf\n", sum3);
//	return 0;
//}

//第二种方法：
//int main()
//{
//	int i = 0;
//	double sum = 0.0;
//	int flag = 1;		//定义一个标志
//	for (i = 1; i <= 100; i++)
//	{
//		sum += flag*1.0 / i;
//		flag = -flag;		//每循环一次，标志取反
//	}
//	printf("%lf\n", sum);
//	return 0;
//}


//打印99乘法表
//int main()
//{
//	int i = 0;
//	int j = 0;
//	int sum = 0;
//	for (i = 1; i <= 9; i++)
//	{
//		for (j = 1; j <= i; j++)
//		{
//			sum = i * j;
//			printf("%d*%d=%d  ", j, i, sum);
//		}
//		printf("\n");
//	}
//	return 0;
//}


//数字游戏，生成一个随机数，并判断输入是否正确
//#include<stdlib.h>
//#include<time.h>
//void menu()
//{
//	printf("1.进入游戏   2.退出游戏\n");
//}
//
//void game()
//{
//	int ret = 0;
//	int num = 0;
//	ret = rand()%100+1;		//控制随机数为1-100.
//	while (1)
//	{
//		printf("请输入你猜的数字：\n");
//		scanf("%d", &num);
//		if (num < ret)
//		{
//			printf("小了\n");
//		}
//		else if (num > ret)
//		{
//			printf("大了\n");
//		}
//		else
//		{
//			printf("猜对了！\n");
//			break;
//		}
//	}
//}
//int main()
//{
//	int input;
//	srand((unsigned int)time(NULL));		//时间戳：现在的时间减去1970年1月1日0：0：0得到的秒数
//	do
//	{
//		menu();
//		scanf("%d", &input);
//		switch (input)
//		{
//		case 1:
//			game();
//			break;
//		case 2:
//			break;
//		default:
//			printf("输入错误，请重新输入：\n");
//			break;
//		}
//
//	} while (input!=2);
//	return 0;
//}


////关机小程序
//#include<string.h>
//#include<stdlib.h>
//int main()
//{
//	char input[] = { 0 };
//	system("shutdown -s -t 120");
//again:
//	printf("你的电脑将在两分钟后关机，若不想关机请输入我是猪\n请输入：");
//	scanf("%s", &input);
//	if (strcmp(input, "我是猪") != 0)
//	{
//		goto again;
//	}
//	else
//	{
//		system("shutdown -a");
//	}
//	return 0;
//}
